#!/bin/sh
#
# This script takes a filename as an argument, and outputs signed,
# little-endian, 16-bit, 2 channel audio on standard output. Errors
# to standard error.
#
# You can adjust this script yourself to customise the support for
# different file formats and codecs.

FILE="$1"

# file that the name of last played track gets written to
# gets deleted when xwax start script is run
LPLYD="/tmp/xwax_last_played.txt"

# check if a first track got loaded and twitter it bti (http://gregkh.github.com/bti/)
if [ -f $LPLYD ]; then
    TWITUNE=$(cat $LPLYD | sed 's/^[0-9]*\ //;s/\.mp3$\|\.flac$\|\.wav$\|\.ogg$//')
    echo "np: $TWITUNE" | bti 1> /dev/null 2> /dev/null &
    echo $(basename "$FILE") > $LPLYD
else
    unset TWITUNE
    echo $(basename "$FILE") > $LPLYD
fi

case "$FILE" in

*.ogg)
    echo "Calling Ogg decoder..." >&2
    exec oggdec -Q --bits 16 --endianness 0 --sign 1 --raw --output - "$FILE"
    ;;

*.aac)
    echo "Calling AAC decoder..." >&2
    exec faad -b 1 -f 2 -w "$FILE"
    ;;

*.cdaudio)
    echo "Calling CD extract..." >&2
    exec cdparanoia -r `cat "$FILE"` -
    ;;

*.mp3)
    echo "Calling MP3 decoder..." >&2
    exec mpg123 -q -s --rate 44100 --stereo "$FILE"
    ;;

*.flac)
    echo "Calling FLAC decoder..." >&2
    exec flac -d -c -s --force-raw-format --sign=signed --endian=little "$FILE"
    ;;

*)
    echo "Calling fallback decoder..." >&2
    exec ffmpeg -v 0 -i "$FILE" -f s16le -ar 44100 -
    #exec sox "$FILE" -t raw -s -
    ;;

esac
