shell_patterns=0
= t d
1       Archive the current subdirectory (tar)
	Pwd=`basename %d /`
	echo -n "Name of the archive file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" > "$tar.tar.gz" && \
	echo "../$tar.tar created."

2       Compress the current subdirectory (tar.gz)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | gzip -f9 > "$tar.tar.gz" && \
	echo "../$tar.tar.gz created."

3       Compress the current subdirectory (tar.7z)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | 7za a -si "$tar.tar.7z" && \
	echo "../$tar.tar.7z created."

+ t d
4       Compress the current subdirectory (zip)
        zip -r %s.zip %s

=+ f \.tar\.gz$ | f \.tar\.z$ | f \.tgz$ | f \.tpz$ | f \.tar\.lz$ | f \.tar\.lzma$ | f \.tar\.7z$ | f \.tar\.xz$ | f \.tar\.Z$ | f \.tar\.bz2$ & t r
x       Extract the contents of a compressed tar file
	unset PRG
	case %f in
	    *.tar.bz2)
		PRG="bunzip2 -c"
		;;
	    *.tar.gz|*.tar.z|*.tgz|*.tpz|*.tar.Z)
		PRG="gzip -dc"
		;;
	    *.tar.lzma)
		PRG="lzma -dc"
		;;
	    *.tar.lz)
		PRG="lzip -dc"
		;;
	    *.tar.xz)
		PRG="xz -dc"
		;;
	    *.tar.7z)
		PRG="7za e -so"
		;;
	    *)
		exit 1
		;;
	esac
	$PRG %f | tar xvf -

################################################
########## user hooks ##########################
################################################

+ ! t t
g       play all audio files in deadbeef
        IFS=$(echo -en "\n\b")
        files=`find . -maxdepth 1 -type f -regextype posix-egrep -iregex '.*(mp3|flac|wav|ogg|m4a|aif+)$' | sort`
        deadbeef $files &

+ f \.[Aa][Ii][Ff][Ff]$ | f \.[Aa][Ii][Ff]$ | f \.[Mm][Pp]3$ | f \.[Mm]4[Aa]$ | f \.[Ww][Aa][Vv]$ | f \.[Oo][Gg][Gg]$ | f \.[Ff][Ll][Aa][Cc]$ | f \.[Aa][Pp][Ee]$ & t r & t t
q       queue tracks in deadbeef
        deadbeef --queue %s &

+ f \.[Aa][Ii][Ff][Ff]$ | f \.[Aa][Ii][Ff]$ | f \.[Mm][Pp]3$ | f \.[Mm]4[Aa]$ | f \.[Ww][Aa][Vv]$ | f \.[Oo][Gg][Gg]$ | f \.[Ff][Ll][Aa][Cc]$ | f \.[Aa][Pp][Ee]$ & t r & ! t t
q       queue track in deadbeef
        deadbeef --queue %f &

+ f \.[Aa][Ii][Ff][Ff]$ | f \.[Aa][Ii][Ff]$ | f \.[Mm][Pp]3$ | f \.[Mm]4[Aa]$ | f \.[Ww][Aa][Vv]$ | f \.[Oo][Gg][Gg]$ | f \.[Ff][Ll][Aa][Cc]$ | f \.[Aa][Pp][Ee]$ & t r & ! t t
s       Analyse current audio file with spek
	/usr/bin/spek %f

+ f \.[Aa][Ii][Ff][Ff]$ | f \.[Aa][Ii][Ff]$ | f \.[Mm][Pp]3$ | f \.[Mm]4[Aa]$ | f \.[Ww][Aa][Vv]$ | f \.[Oo][Gg][Gg]$ | f \.[Ff][Ll][Aa][Cc]$ | f \.[Aa][Pp][Ee]$ & t r & ! t t
b       plot bpm detection
        $HOME/bin/bpmplot %f

+ f \.[Aa][Ii][Ff][Ff]$ | f \.[Aa][Ii][Ff]$ | f \.[Mm][Pp]3$ | f \.[Mm]4[Aa]$ | f \.[Ww][Aa][Vv]$ | f \.[Oo][Gg][Gg]$ | f \.[Ff][Ll][Aa][Cc]$ | f \.[Aa][Pp][Ee]$ & t r & ! t t
t       rename audio file according to its tag
        $HOME/files/scripts/tag2filename %f

+ t t
t       rename audio files according to their tags
        $HOME/files/scripts/tag2filename %s

+ f \.mkv$ | f \.ogm$ & t r & ! t t
m       Play with mplayer and ass support
	mplayer -ass %f &

r       Open VIM Renamer
	vim -c Renamer

+ f \.wav$ & t r
f       encode wave to flac
        for i in %s
        do
	    /usr/bin/flac -8 "$i"
        done

+ f \.flac$ & t r
f       decode flac to wave
        for i in %s
        do
	    /usr/bin/flac -d "$i"
        done

